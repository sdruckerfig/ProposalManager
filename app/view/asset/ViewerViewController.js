/*
 * File: app/view/asset/ViewerViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProposalManager.view.asset.ViewerViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.assetviewer',

    requires: [
        'Ext.ux.panel.PDF',
        'Ext.ux.imageviewer.ImageViewer',
        'Ext.ux.IFrame'
    ],

    loadAsset: function(id) {


        var me = this;
        if (id && id > 0) {

            var view = this.getView();
            view.removeAll();
            view.setLoading(true);
            ProposalManager.model.ProposalAsset.load(id, {
                withCredentials: true,
                success: function(rec) {
                    me.getViewModel().set('selectedRecord', rec);
                    me.deployViewer(rec);
                    view.setLoading(false);
                },
                failure: function(rec) {
                    view.setLoading(false);
                    Ext.Msg.alert("Failed","Failed to retrieve asset");
                }
            });
        }
    },

    deployViewer: function(rec) {
        var view = this.getView();
        view.removeAll();
        view.update(null);
        if (!Ext.isEmpty(rec.get('fileurl'))) {
            var fileExt =  rec.get('fileurl').split('.').pop();
            switch(fileExt) {
                case 'pdf' :

                    view.add({
                        xtype: 'pdfpanel',
                        title: rec.get('title'),
                        pageScale: 1,
                        src: rec.get('fileurl'),
                        header: false
                    });
                    break;
                case 'jpg' :
                case 'png' :
                case 'gif' :
                    view.add(
                        {
                            xtype: 'extimageviewer',
                            title:  rec.get('title'),
                            src: rec.get('fileurl'),
                            header: false,
                            imageTitle: rec.get('title')
                        });
                    break;
                default:
                    view.add(
                        {
                            xtype: 'uxiframe',
                            src: rec.get('fileurl')
                        }
                    );
            }
        } else if (!Ext.isEmpty(rec.get('contenturl'))) {
            view.add(
                {
                    xtype: 'uxiframe',
                    src: rec.get('contenturl')
                }
            );
        } else if (!Ext.isEmpty(rec.get('fullcontent'))) {
            view.update('<div style="padding: 10px">' + rec.get('fullcontent') + '</div>');
        }
    }

});
