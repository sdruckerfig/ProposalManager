/*
 * File: app/controller/Main.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProposalManager.controller.Main', {
    extend: 'Ext.app.Controller',

    requires: [
        'Ext.app.route.Route'
    ],

    views: [
        'admin.companies.Companies'
    ],

    routes: {
        'home': 'onHome',
        'main': {
            before: function(action) {
                this.onAuthenticate(action);
            },
            action: 'onMain'
        },
        'logout': 'onLogout',
        'admin/:xtype': {
            before: function(xtype, action) {
                this.onAuthenticate(action);
            },
            action: 'onAdminAction'
        },
        'editasset/:id': {
            before: function(id, action) {
                this.onAuthenticate(action);
            },
            action: 'onEditAsset'
        },
        'viewasset/:id': {
            before: function(id, action) {
                this.onAuthenticate(action);
            },
            action: 'onViewAsset'
        }
    },

    refs: {
        viewport: 'viewport',
        main: 'main',
        assetViewer: 'assetviewer',
        assetBrowser: 'assetbrowser'
    },

    control: {
        "window": {
            aftersave: 'onAssetAfterSave'
        }
    },

    onAssetAfterSave: function() {
        this.getAssetBrowser().getViewModel().getStore('ProposalAssets').load();
    },

    onHome: function() {
        this.getViewport().removeAll();
        Ext.widget('login');
    },

    onMain: function() {
        if (!this.getMain()) {
            this.getViewport().add({
                xtype: 'main',
                region: 'center'
            });
        }
    },

    onAuthenticate: function(action) {
        if (sessionStorage.getItem('userName')) {
            var vm = this.getViewport().getViewModel();
            vm.set('userName',sessionStorage.getItem('userName'));
            vm.set('userRole',sessionStorage.getItem('userRole'));
            action.resume();
        } else {

            Ext.widget('login', {
                action: action
            });
        }
    },

    onLogout: function() {
        sessionStorage.clear();
        var vm = this.getViewport().getViewModel();
        vm.set('userName',null);
        vm.set('userRole',null);
        Ext.Ajax.request({
            url: '/rest/ProposalManager/Auth.json',
            method: 'DELETE',
            withCredentials: true,
            success: function() {
                // no operation
            },
            failure: function() {
                Ext.Msg.alert("Error","An Error Occurred. Please try again later");
            }
        });


        this.redirectTo('home');

    },

    onAdminAction: function(xtype) {
        this.onMain();
        Ext.widget(xtype);

    },

    onEditAsset: function(id) {
        this.onMain();
        Ext.widget('editasset',{
            assetId: id
        });
    },

    onViewAsset: function(id) {
        this.onMain();
        this.getAssetViewer().setAssetId(id);
    }

});
